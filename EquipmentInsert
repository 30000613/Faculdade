package gestormaterialescutista;


import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.*;
import java.util.*;
import javax.swing.*;
import javax.swing.plaf.basic.*;
import Configurações.Instruments;
import java.sql.PreparedStatement;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Utilizador
 * 
 * 
 */



public class EquipmentInsert extends javax.swing.JFrame {


    Connection con;
    Instruments Instrument = new Instruments();
    
    
    public EquipmentInsert() throws ClassNotFoundException, SQLException {
        
    initComponents(); 
    CreateConnection();
    PopulateUnitComboBox();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        Savebutton = new javax.swing.JButton();
        UnitCombobox = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        SubUnitComboBox = new javax.swing.JComboBox<>();
        TipoEquipamentoBox = new javax.swing.JComboBox<>();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("To List");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Equipamento:");

        jTextField1.setText("jTextField1");

        jLabel2.setText("Descrição");

        jLabel4.setText("tipo Equipamento");

        jTextField2.setText("jTextField2");

        Savebutton.setText("Guardar");
        Savebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SavebuttonActionPerformed(evt);
            }
        });

        UnitCombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecion uma Unidade" }));
        UnitCombobox.setToolTipText("Selecione uma unidade");
        UnitCombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UnitComboboxActionPerformed(evt);
            }
        });

        jLabel5.setText("Unidade");

        jLabel6.setText("Sub-unidade");

        SubUnitComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione uma Sub-Unidade" }));

        TipoEquipamentoBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione Tipo Equipamento", " " }));
        TipoEquipamentoBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TipoEquipamentoBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Savebutton))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(24, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(20, 20, 20)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField1)
                            .addComponent(jTextField2)
                            .addComponent(TipoEquipamentoBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(UnitCombobox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(SubUnitComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(60, 60, 60))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(TipoEquipamentoBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UnitCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(SubUnitComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(Savebutton))
                .addGap(100, 100, 100))
        );

        pack();
    }// </editor-fold>                        

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        EquipmentList ELscreen = new EquipmentList();
        ELscreen.show();
        dispose();
        
    }                                        

     void PopulateUnitComboBox() throws ClassNotFoundException, SQLException{
         
        Class.forName("org.apache.derby.jdbc.ClientDriver");
        Connection con=DriverManager.getConnection("jdbc:derby://localhost:1527/ScoutsDB_DEV","AdminA","123456");
        Statement stm = con.createStatement();
        String query_Select = "SELECT CODIGO,NOME FROM ADMINA.UNIDADES ";
        ResultSet rs1 = stm.executeQuery(query_Select);

        while(rs1.next()) 
        {

             String item = rs1.getString("CODIGO")+" - "+rs1.getString("NOME");
             UnitCombobox.addItem(item);

         }
        
        query_Select = "SELECT CODIGO,NOME FROM SUBUNIDADES";
        ResultSet rs2 = stm.executeQuery(query_Select);
        while(rs2.next()) 
        {
            String item = rs2.getString("CODIGO")+" - "+rs2.getString("NOME");
            SubUnitComboBox.addItem(item.trim());
         }
        
         query_Select = "SELECT NOME FROM TIPOS_EQUIPAMENTO";
          ResultSet rs3 = stm.executeQuery(query_Select);
        while(rs3.next()) 
        {
            String item = rs3.getString("NOME");
            TipoEquipamentoBox.addItem(item.trim());
         }

        con.close();
        
         
    }

 
     
    void CreateConnection(){
        try { 
         
            try {
                Class.forName("org.apache.derby.jdbc.ClientDriver");
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(EquipmentInsert.class.getName()).log(Level.SEVERE, null, ex);
            }
            Connection con=DriverManager.getConnection("jdbc:derby://localhost:1527/ScoutsDB","AdminA","123456");
        } catch (SQLException ex) {
            Logger.getLogger(EquipmentInsert.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    }
    
    private void SavebuttonActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
        
    String name = jTextField1.getText();
    String descricao = jTextField2.getText();
    String Selectedtype = TipoEquipamentoBox.getSelectedItem().toString();
    String SelectedUnit = Instrument.GetUnitCode_Combo(UnitCombobox.getSelectedItem().toString());
    String SelectedSubUnit = Instrument.GetUnitCode_Combo(SubUnitComboBox.getSelectedItem().toString());
    int typeID =0;
    int UnidadeId = 0;
    int SubunidadeId =0;
    int EquipId = 0;
    
    
    
         try{
    con=DriverManager.getConnection("jdbc:derby://localhost:1527/ScoutsDB_DEV","AdminA","123456");  
    Statement st = con.createStatement();
    
    String query_Select1 = "SELECT * FROM ADMINA.TIPOS_EQUIPAMENTO where NOME = '"+Selectedtype.trim()+"'";
    ResultSet rs3 = st.executeQuery(query_Select1);
    while(rs3.next()) 
    {
      typeID = Integer.parseInt(rs3.getString("TE_ID"));
    }
    
     String query_Select2 = "SELECT * FROM ADMINA.UNIDADES where CODIGO = '"+SelectedUnit.trim()+"'";
    ResultSet rs4 = st.executeQuery(query_Select2);
    while(rs4.next()) 
    {
      UnidadeId = Integer.parseInt(rs4.getString("UNIDADE_ID"));
    }
      String query_Select3 = "SELECT * FROM ADMINA.SUBUNIDADES where CODIGO = '"+SelectedSubUnit.trim()+"'";
    ResultSet rs5 = st.executeQuery(query_Select3);
    while(rs5.next()) 
    {
      SubunidadeId = Integer.parseInt(rs5.getString("SUBUNIDADE_ID"));
    }
    

    String query_Insert1 = "Insert into EQUIPAMENTOS(\"NOME\",\"DESCRICAO\",DATA_REGISTO,TIPO) values ('"+name.trim()+"','"+descricao.trim()+"','"+Instrument.CurrentDate()+"',"+typeID+")";
    String[] returnId = { "EQUIPAMENTO_ID" };
    PreparedStatement statement = con.prepareStatement(query_Insert1,
                                      returnId);
    statement.executeUpdate();
    ResultSet rs = statement.getGeneratedKeys();
  
    if (rs.next()) {
       EquipId = rs.getInt(1);
       System.out.println("Inserted ID -" + EquipId); // display inserted record
                }

    String query_insert2 ="Insert into EQUIPAMENTOS_UNIDADES(UNIDADE_FK,SUBUNI_FK,EQUIPAMENTO_FK) values ("+UnidadeId+","+SubunidadeId+","+EquipId+")";
    st.executeUpdate(query_insert2);
 
    
    st.close();
    con.close();
             System.out.println("Dados Guardados");
    }catch(Exception e){e.printStackTrace();};   
 
    
    
    
    }                                          

    private void UnitComboboxActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
    }                                            

    private void TipoEquipamentoBoxActionPerformed(java.awt.event.ActionEvent evt) {                                                   
    
        
        
        
    }                                                  

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EquipmentDetailPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EquipmentDetailPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EquipmentDetailPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EquipmentDetailPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new EquipmentInsert().setVisible(true);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(EquipmentInsert.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(EquipmentInsert.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton Savebutton;
    private javax.swing.JComboBox<String> SubUnitComboBox;
    private javax.swing.JComboBox<String> TipoEquipamentoBox;
    private javax.swing.JComboBox<String> UnitCombobox;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration                   
}
